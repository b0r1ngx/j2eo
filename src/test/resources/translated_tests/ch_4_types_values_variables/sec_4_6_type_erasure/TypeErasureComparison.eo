# 2022-07-14T16:00:14.252761300
# j2eo team
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__System
+alias stdlib.lang.class__String

[] > class__A
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__A" > className
    [this] > init
      seq > @
        TRUE
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_1
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_1
      this.super.constructor > @
        this.super

[] > class__TypeErasureComparison
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__TypeErasureComparison" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      variableDeclaration_3
      statementExpression_2
      statementExpression_3
      statementExpression_4
    cage > a
    [] > variableDeclaration_1
      a.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__A.constructor > @
        class__A.new
    cage > b
    [] > variableDeclaration_2
      b.write > @
        initializerSimple_2
    [] > initializerSimple_2
      instanceCreation_2 > @
    [] > instanceCreation_2
      class__A.constructor > @
        class__A.new
    cage > c
    [] > variableDeclaration_3
      c.write > @
        initializerSimple_3
    [] > initializerSimple_3
      instanceCreation_3 > @
    [] > instanceCreation_3
      class__A.constructor > @
        class__A.new
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        binary_1
    [] > binary_1
      methodInvocation_1.eq > @
        methodInvocation_2
    [] > methodInvocation_1
      a.getClass > @
        a
    [] > methodInvocation_2
      b.getClass > @
        b
    [] > statementExpression_3
      class__System.out.println > @
        class__System.out
        binary_2
    [] > binary_2
      methodInvocation_3.eq > @
        methodInvocation_4
    [] > methodInvocation_3
      b.getClass > @
        b
    [] > methodInvocation_4
      c.getClass > @
        c
    [] > statementExpression_4
      class__System.out.println > @
        class__System.out
        literal_1
    [] > literal_1
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_5
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      this.super.constructor > @
        this.super

[args...] > main
  class__TypeErasureComparison.main > @
    *