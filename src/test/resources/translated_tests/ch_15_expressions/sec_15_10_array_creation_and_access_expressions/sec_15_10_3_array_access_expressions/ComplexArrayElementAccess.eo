# 2022-07-18T16:13:14.672619162
# j2eo team
+alias stdlib.primitives.prim__float
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__ComplexArrayElementAccess
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__ComplexArrayElementAccess" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      statementExpression_1
      statementExpression_2
      statementExpression_3
    cage > a
    [] > variableDeclaration_1
      a.write > @
        initializerArray_1
    [] > initializerArray_1
      * > @
        initializerSimple_1
        initializerSimple_2
    [] > initializerSimple_1
      literal_1 > @
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > initializerSimple_2
      literal_2 > @
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        1
    cage > b
    [] > variableDeclaration_2
      b.write > @
        initializerArray_2
    [] > initializerArray_2
      * > @
        initializerSimple_3
        initializerSimple_4
    [] > initializerSimple_3
      unaryPrefix_1 > @
    [] > unaryPrefix_1
      literal_3.neg > @
    [] > literal_3
      prim__float.constructor_2 > @
        prim__float.new
        0.5
    [] > initializerSimple_4
      literal_4 > @
    [] > literal_4
      prim__float.constructor_2 > @
        prim__float.new
        0.5
    [] > statementExpression_1
      arrayAccess_1.write > @
        literal_5
    [] > arrayAccess_1
      simpleReference_1.get > @
        arrayAccess_2.v
    [] > simpleReference_1
      b > @
    [] > arrayAccess_2
      simpleReference_2.get > @
        literal_6.v
    [] > simpleReference_2
      a > @
    [] > literal_6
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > literal_5
      prim__float.constructor_2 > @
        prim__float.new
        1.0
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        arrayAccess_3
    [] > arrayAccess_3
      simpleReference_3.get > @
        arrayAccess_4.v
    [] > simpleReference_3
      b > @
    [] > arrayAccess_4
      simpleReference_4.get > @
        literal_7.v
    [] > simpleReference_4
      a > @
    [] > literal_7
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > statementExpression_3
      class__System.out.println > @
        class__System.out
        literal_8
    [] > literal_8
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_4
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_4
      this.super.constructor > @
        this.super

[args...] > main
  class__ComplexArrayElementAccess.main > @
    *