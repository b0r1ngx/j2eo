# 2022-07-14T15:56:24.104324300
# j2eo team
+alias stdlib.primitives.prim__char
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__String
+alias stdlib.primitives.prim__int

[] > class__PermuteString
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__PermuteString" > className
    [this] > init
      seq > @
        TRUE
  # swapString :: String -> int -> int -> String
  [a i j] > swapString
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      statementExpression_1
      statementExpression_2
      statementExpression_3
      return_1
    cage > b
    [] > variableDeclaration_1
      b.write > @
        initializerSimple_1
    [] > initializerSimple_1
      methodInvocation_1 > @
    [] > methodInvocation_1
      a.toCharArray > @
        a
    prim__char.constructor_1 > ch
      prim__char.new
    [] > variableDeclaration_2
      TRUE > @
    [] > statementExpression_1
      simpleReference_2.write > @
        arrayAccess_1
    [] > simpleReference_2
      ch > @
    [] > arrayAccess_1
      simpleReference_3.get > @
        simpleReference_4.v
    [] > simpleReference_3
      b > @
    [] > simpleReference_4
      i > @
    [] > statementExpression_2
      arrayAccess_2.write > @
        arrayAccess_3
    [] > arrayAccess_2
      simpleReference_5.get > @
        simpleReference_6.v
    [] > simpleReference_5
      b > @
    [] > simpleReference_6
      i > @
    [] > arrayAccess_3
      simpleReference_7.get > @
        simpleReference_8.v
    [] > simpleReference_7
      b > @
    [] > simpleReference_8
      j > @
    [] > statementExpression_3
      arrayAccess_4.write > @
        simpleReference_9
    [] > arrayAccess_4
      simpleReference_10.get > @
        simpleReference_11.v
    [] > simpleReference_10
      b > @
    [] > simpleReference_11
      j > @
    [] > simpleReference_9
      ch > @
    [] > return_1
      methodInvocation_2 > @
    [] > methodInvocation_2
      class__String.valueOf > @
        simpleReference_13
    [] > simpleReference_13
      b > @
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_3
      variableDeclaration_4
      statementExpression_4
      statementExpression_5
      statementExpression_6
    cage > str
    [] > variableDeclaration_3
      str.write > @
        initializerSimple_2
    [] > initializerSimple_2
      literal_1 > @
    [] > literal_1
      class__String.constructor_2 > @
        class__String.new
        "ABC"
    prim__int.constructor_1 > len
      prim__int.new
    [] > variableDeclaration_4
      len.write > @
        initializerSimple_3
    [] > initializerSimple_3
      methodInvocation_3 > @
    [] > methodInvocation_3
      str.length > @
        str
    [] > statementExpression_4
      class__System.out.println > @
        class__System.out
        literal_2
    [] > literal_2
      class__String.constructor_2 > @
        class__String.new
        "All the permutations of the string are: "
    [] > statementExpression_5
      this.generatePermutation > @
        this
        simpleReference_15
        literal_3
        simpleReference_16
    [] > simpleReference_15
      str > @
    [] > literal_3
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > simpleReference_16
      len > @
    [] > statementExpression_6
      class__System.out.println > @
        class__System.out
        literal_4
    [] > literal_4
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # generatePermutation :: String -> int -> int -> void
  [str start end] > generatePermutation
    seq > @
      ifThenElse_1
    [] > ifThenElse_1
      binary_1.if > @
        statementExpression_7
        block_1
    [] > binary_1
      simpleReference_17.eq > @
        binary_2
    [] > simpleReference_17
      start > @
    [] > binary_2
      simpleReference_18.sub > @
        literal_5
    [] > simpleReference_18
      end > @
    [] > literal_5
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > statementExpression_7
      class__System.out.println > @
        class__System.out
        simpleReference_19
    [] > simpleReference_19
      str > @
    [] > block_1
      seq > @
        statementExpression_8
      [] > statementExpression_8
        for_loop_placeholder > @
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_9
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_9
      this.super.constructor > @
        this.super

[args...] > main
  class__PermuteString.main > @
    *