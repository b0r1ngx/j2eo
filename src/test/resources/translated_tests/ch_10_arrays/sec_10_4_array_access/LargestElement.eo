# 2022-07-18T16:09:54.600968875
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.primitives.null
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__LargestElement
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__LargestElement" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # largest :: int[] -> int
  [array] > largest
    seq > @
      variableDeclaration_1
      statementExpression_1
      return_1
    prim__int.constructor_1 > max
      prim__int.new
    [] > variableDeclaration_1
      max.write > @
        initializerSimple_1
    [] > initializerSimple_1
      arrayAccess_1 > @
    [] > arrayAccess_1
      simpleReference_1.get > @
        literal_1.v
    [] > simpleReference_1
      array > @
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > statementExpression_1
      for_loop_placeholder > @
    [] > return_1
      simpleReference_2 > @
    [] > simpleReference_2
      max > @
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_2
      variableDeclaration_3
      statementExpression_2
      statementExpression_3
      statementExpression_4
      statementExpression_5
    prim__int.constructor_1 > size
      prim__int.new
    [] > variableDeclaration_2
      size.write > @
        initializerSimple_2
    [] > initializerSimple_2
      literal_2 > @
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        10
    prim__int.constructor_1 > arr
      prim__int.new
    [] > variableDeclaration_3
      arr.write > @
        initializerSimple_3
    [] > initializerSimple_3
      literal_3 > @
    [] > literal_3
      null > @
    [] > statementExpression_2
      simpleReference_3.write > @
        arrayCreation_1
    [] > simpleReference_3
      arr > @
    [] > arrayCreation_1
      FALSE > @
    [] > statementExpression_3
      for_loop_placeholder > @
    [] > statementExpression_4
      class__System.out.println > @
        class__System.out
        binary_1
    [] > binary_1
      literal_4.add > @
        methodInvocation_1
    [] > literal_4
      class__String.constructor_2 > @
        class__String.new
        "Largest element = "
    [] > methodInvocation_1
      this.largest > @
        this
        simpleReference_4
    [] > simpleReference_4
      arr > @
    [] > statementExpression_5
      class__System.out.println > @
        class__System.out
        literal_5
    [] > literal_5
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_6
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_6
      this.super.constructor > @
        this.super

[args...] > main
  class__LargestElement.main > @
    *