# 2022-07-13T17:59:02.939483100
# j2eo team
+package ch_4_types_values_variables.sec_4_12_variables.sec_4_12_5_initial_values_of_vars
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__System
+alias stdlib.primitives.prim__int

[] > class__Point
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Point" > className
    [this] > init
      seq > @
        TRUE
    prim__int.constructor_1 > x
      prim__int.new
    prim__int.constructor_1 > y
      prim__int.new
    cage > root
  prim__int.constructor_1 > npoints
    prim__int.new
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_1
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_1
      this.super.constructor > @
        this.super

[] > class__ComplexDefValueTest
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__ComplexDefValueTest" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      statementExpression_2
      variableDeclaration_1
      statementExpression_3
      statementExpression_4
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        binary_1
    [] > binary_1
      literal_1.add > @
        fieldAccess_2
    [] > literal_1
      class__String.constructor_2 > @
        class__String.new
        "npoints="
    [] > fieldAccess_2
      simpleReference_1.npoints > @
    [] > simpleReference_1
      class__Point > @
    cage > p
    [] > variableDeclaration_1
      p.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__Point.constructor > @
        class__Point.new
    [] > statementExpression_3
      class__System.out.println > @
        class__System.out
        binary_2
    [] > binary_2
      binary_3.add > @
        fieldAccess_4
    [] > binary_3
      binary_4.add > @
        literal_2
    [] > binary_4
      literal_3.add > @
        fieldAccess_5
    [] > literal_3
      class__String.constructor_2 > @
        class__String.new
        "p.x="
    [] > fieldAccess_5
      simpleReference_2.x > @
    [] > simpleReference_2
      p > @
    [] > literal_2
      class__String.constructor_2 > @
        class__String.new
        ", p.y="
    [] > fieldAccess_4
      simpleReference_3.y > @
    [] > simpleReference_3
      p > @
    [] > statementExpression_4
      class__System.out.println > @
        class__System.out
        binary_5
    [] > binary_5
      literal_4.add > @
        fieldAccess_7
    [] > literal_4
      class__String.constructor_2 > @
        class__String.new
        "p.root="
    [] > fieldAccess_7
      simpleReference_4.root > @
    [] > simpleReference_4
      p > @
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_5
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      this.super.constructor > @
        this.super

[args...] > main
  class__ComplexDefValueTest.main > @
    *