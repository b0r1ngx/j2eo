# 2022-07-18T16:08:49.383405996
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__boolean
+alias stdlib.lang.class__String

[] > class__SimpleLogicalComplement
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SimpleLogicalComplement" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      statementExpression_1
      statementExpression_2
    prim__boolean.constructor_1 > a
      prim__boolean.new
    [] > variableDeclaration_1
      a.write > @
        initializerSimple_1
    [] > initializerSimple_1
      literal_1 > @
    [] > literal_1
      prim__boolean.constructor_2 > @
        prim__boolean.new
        TRUE
    prim__boolean.constructor_1 > b
      prim__boolean.new
    [] > variableDeclaration_2
      b.write > @
        initializerSimple_2
    [] > initializerSimple_2
      literal_2 > @
    [] > literal_2
      prim__boolean.constructor_2 > @
        prim__boolean.new
        FALSE
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        binary_1
    [] > binary_1
      unaryPrefix_1.eq > @
        simpleReference_1
    [] > unaryPrefix_1
      simpleReference_2.unary_placeholder > @
    [] > simpleReference_2
      a > @
    [] > simpleReference_1
      b > @
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        literal_3
    [] > literal_3
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[args...] > main
  class__SimpleLogicalComplement.main > @
    *