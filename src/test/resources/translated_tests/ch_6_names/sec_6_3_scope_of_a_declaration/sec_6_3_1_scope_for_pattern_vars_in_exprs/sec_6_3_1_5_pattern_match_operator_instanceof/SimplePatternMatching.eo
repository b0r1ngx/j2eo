# 2022-07-14T15:59:47.378121700
# j2eo team
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__System
+alias stdlib.lang.class__String

[] > class__SimplePatternMatching
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SimplePatternMatching" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      ifThenElse_1
      statementExpression_1
    cage > s
    [] > variableDeclaration_1
      s.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__Sub.constructor > @
        class__Sub.new
    [] > ifThenElse_1
      instanceOf_1.if > @
        block_1
        empty_1
    [] > instanceOf_1
      instance_of_placeholder > @
    [] > block_1
      seq > @
        statementExpression_2
        return_1
      [] > statementExpression_2
        class__System.out.println > @
          class__System.out
          fieldAccess_2
      [] > fieldAccess_2
        simpleReference_1.value > @
      [] > simpleReference_1
        sub > @
    [] > empty_1
      TRUE > @
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        literal_1
    [] > literal_1
      class__String.constructor_2 > @
        class__String.new
        "not passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[] > class__Some
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Some" > className
    [this] > init
      seq > @
        TRUE
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_4
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_4
      this.super.constructor > @
        this.super

[] > class__Sub
  class__Some > super
  super > @
  [] > new
    class__Some.new > super
    super > @
    "class__Sub" > className
    [this] > init
      seq > @
        variableDeclaration_2
      [] > variableDeclaration_2
        this.value.write > @
          initializerSimple_2
      [] > initializerSimple_2
        literal_2 > @
      [] > literal_2
        class__String.constructor_2 > @
          class__String.new
          "passed"
    cage > value
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_5
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      this.super.constructor > @
        this.super

[args...] > main
  class__SimplePatternMatching.main > @
    *