# 2022-07-13T17:59:01.197666700
# j2eo team
+package ch_10_arrays.sec_10_4_array_access
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__CompareArray
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__CompareArray" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      variableDeclaration_3
      variableDeclaration_4
      ifThenElse_1
      ifThenElse_2
      ifThenElse_3
      statementExpression_1
    prim__int.constructor_1 > arr1
      prim__int.new
    [] > variableDeclaration_1
      arr1.write > @
        initializerArray_1
    [] > initializerArray_1
      * > @
        initializerSimple_1
        initializerSimple_2
        initializerSimple_3
        initializerSimple_4
        initializerSimple_5
    [] > initializerSimple_1
      literal_1 > @
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        10
    [] > initializerSimple_2
      literal_2 > @
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        20
    [] > initializerSimple_3
      literal_3 > @
    [] > literal_3
      prim__int.constructor_2 > @
        prim__int.new
        30
    [] > initializerSimple_4
      literal_4 > @
    [] > literal_4
      prim__int.constructor_2 > @
        prim__int.new
        40
    [] > initializerSimple_5
      literal_5 > @
    [] > literal_5
      prim__int.constructor_2 > @
        prim__int.new
        50
    prim__int.constructor_1 > arr2
      prim__int.new
    [] > variableDeclaration_2
      arr2.write > @
        initializerSimple_6
    [] > initializerSimple_6
      simpleReference_1 > @
    [] > simpleReference_1
      arr1 > @
    prim__int.constructor_1 > arr3
      prim__int.new
    [] > variableDeclaration_3
      arr3.write > @
        initializerArray_2
    [] > initializerArray_2
      * > @
        initializerSimple_7
        initializerSimple_8
        initializerSimple_9
        initializerSimple_10
        initializerSimple_11
    [] > initializerSimple_7
      literal_6 > @
    [] > literal_6
      prim__int.constructor_2 > @
        prim__int.new
        10
    [] > initializerSimple_8
      literal_7 > @
    [] > literal_7
      prim__int.constructor_2 > @
        prim__int.new
        20
    [] > initializerSimple_9
      literal_8 > @
    [] > literal_8
      prim__int.constructor_2 > @
        prim__int.new
        30
    [] > initializerSimple_10
      literal_9 > @
    [] > literal_9
      prim__int.constructor_2 > @
        prim__int.new
        40
    [] > initializerSimple_11
      literal_10 > @
    [] > literal_10
      prim__int.constructor_2 > @
        prim__int.new
        50
    prim__int.constructor_1 > arr4
      prim__int.new
    [] > variableDeclaration_4
      arr4.write > @
        initializerArray_3
    [] > initializerArray_3
      * > @
        initializerSimple_12
        initializerSimple_13
        initializerSimple_14
        initializerSimple_15
        initializerSimple_16
    [] > initializerSimple_12
      literal_11 > @
    [] > literal_11
      prim__int.constructor_2 > @
        prim__int.new
        15
    [] > initializerSimple_13
      literal_12 > @
    [] > literal_12
      prim__int.constructor_2 > @
        prim__int.new
        25
    [] > initializerSimple_14
      literal_13 > @
    [] > literal_13
      prim__int.constructor_2 > @
        prim__int.new
        35
    [] > initializerSimple_15
      literal_14 > @
    [] > literal_14
      prim__int.constructor_2 > @
        prim__int.new
        45
    [] > initializerSimple_16
      literal_15 > @
    [] > literal_15
      prim__int.constructor_2 > @
        prim__int.new
        55
    [] > ifThenElse_1
      binary_1.if > @
        statementExpression_2
        statementExpression_3
    [] > binary_1
      simpleReference_2.eq > @
        simpleReference_3
    [] > simpleReference_2
      arr1 > @
    [] > simpleReference_3
      arr2 > @
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        literal_16
    [] > literal_16
      class__String.constructor_2 > @
        class__String.new
        "arr1 & arr2 are same"
    [] > statementExpression_3
      class__System.out.println > @
        class__System.out
        literal_17
    [] > literal_17
      class__String.constructor_2 > @
        class__String.new
        "arr1 & arr2 are not same"
    [] > ifThenElse_2
      binary_2.if > @
        statementExpression_4
        statementExpression_5
    [] > binary_2
      simpleReference_4.eq > @
        simpleReference_5
    [] > simpleReference_4
      arr1 > @
    [] > simpleReference_5
      arr3 > @
    [] > statementExpression_4
      class__System.out.println > @
        class__System.out
        literal_18
    [] > literal_18
      class__String.constructor_2 > @
        class__String.new
        "arr1 & arr3 are same"
    [] > statementExpression_5
      class__System.out.println > @
        class__System.out
        literal_19
    [] > literal_19
      class__String.constructor_2 > @
        class__String.new
        "arr1 & arr3 are not same"
    [] > ifThenElse_3
      binary_3.if > @
        statementExpression_6
        statementExpression_7
    [] > binary_3
      simpleReference_6.eq > @
        simpleReference_7
    [] > simpleReference_6
      arr1 > @
    [] > simpleReference_7
      arr4 > @
    [] > statementExpression_6
      class__System.out.println > @
        class__System.out
        literal_20
    [] > literal_20
      class__String.constructor_2 > @
        class__String.new
        "arr1 & arr4 are same"
    [] > statementExpression_7
      class__System.out.println > @
        class__System.out
        literal_21
    [] > literal_21
      class__String.constructor_2 > @
        class__String.new
        "arr1 & arr4 are not same"
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        literal_22
    [] > literal_22
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_8
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_8
      this.super.constructor > @
        this.super

[args...] > main
  class__CompareArray.main > @
    *