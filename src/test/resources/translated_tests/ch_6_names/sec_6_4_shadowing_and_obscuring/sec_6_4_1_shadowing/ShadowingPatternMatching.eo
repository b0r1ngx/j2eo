# 2022-07-18T16:13:34.134255384
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__String
+alias stdlib.primitives.prim__int

[] > class__ShadowingPatternMatching
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__ShadowingPatternMatching" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # test :: Object -> Object -> Object -> void
  [a b c] > test
    seq > @
      ifThenElse_1
      ifThenElse_2
      ifThenElse_3
    [] > ifThenElse_1
      instanceOf_1.if > @
        block_1
        empty_1
    [] > instanceOf_1
      instance_of_placeholder > @
    [] > block_1
      seq > @
        statementExpression_1
      [] > statementExpression_1
        class__System.out.println > @
          class__System.out
          binary_1
      [] > binary_1
        binary_2.add > @
          literal_1
      [] > binary_2
        binary_3.add > @
          fieldAccess_2
      [] > binary_3
        binary_4.add > @
          literal_2
      [] > binary_4
        literal_3.add > @
          fieldAccess_3
      [] > literal_3
        class__String.constructor_2 > @
          class__String.new
          "a is a point ("
      [] > fieldAccess_3
        simpleReference_1.x > @
      [] > simpleReference_1
        p > @
      [] > literal_2
        class__String.constructor_2 > @
          class__String.new
          ","
      [] > fieldAccess_2
        simpleReference_2.y > @
      [] > simpleReference_2
        p > @
      [] > literal_1
        class__String.constructor_2 > @
          class__String.new
          ")"
    [] > empty_1
      TRUE > @
    [] > ifThenElse_2
      instanceOf_2.if > @
        block_2
        empty_2
    [] > instanceOf_2
      instance_of_placeholder > @
    [] > block_2
      seq > @
        statementExpression_2
      [] > statementExpression_2
        class__System.out.println > @
          class__System.out
          binary_5
      [] > binary_5
        binary_6.add > @
          literal_4
      [] > binary_6
        binary_7.add > @
          fieldAccess_5
      [] > binary_7
        binary_8.add > @
          literal_5
      [] > binary_8
        literal_6.add > @
          fieldAccess_6
      [] > literal_6
        class__String.constructor_2 > @
          class__String.new
          "b is a point ("
      [] > fieldAccess_6
        simpleReference_3.x > @
      [] > simpleReference_3
        p > @
      [] > literal_5
        class__String.constructor_2 > @
          class__String.new
          ","
      [] > fieldAccess_5
        simpleReference_4.y > @
      [] > simpleReference_4
        p > @
      [] > literal_4
        class__String.constructor_2 > @
          class__String.new
          ")"
    [] > empty_2
      TRUE > @
    [] > ifThenElse_3
      instanceOf_3.if > @
        block_3
        empty_3
    [] > instanceOf_3
      instance_of_placeholder > @
    [] > block_3
      seq > @
        statementExpression_3
      [] > statementExpression_3
        class__System.out.println > @
          class__System.out
          binary_9
      [] > binary_9
        binary_10.add > @
          literal_7
      [] > binary_10
        binary_11.add > @
          fieldAccess_8
      [] > binary_11
        binary_12.add > @
          literal_8
      [] > binary_12
        literal_9.add > @
          fieldAccess_9
      [] > literal_9
        class__String.constructor_2 > @
          class__String.new
          "c is a point ("
      [] > fieldAccess_9
        simpleReference_5.x > @
      [] > simpleReference_5
        p > @
      [] > literal_8
        class__String.constructor_2 > @
          class__String.new
          ","
      [] > fieldAccess_8
        simpleReference_6.y > @
      [] > simpleReference_6
        p > @
      [] > literal_7
        class__String.constructor_2 > @
          class__String.new
          ")"
    [] > empty_3
      TRUE > @
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      variableDeclaration_3
      statementExpression_4
      statementExpression_5
    cage > p
    [] > variableDeclaration_1
      p.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__Point.constructor > @
        class__Point.new
        literal_10
        literal_11
    [] > literal_10
      prim__int.constructor_2 > @
        prim__int.new
        2
    [] > literal_11
      prim__int.constructor_2 > @
        prim__int.new
        3
    cage > q
    [] > variableDeclaration_2
      q.write > @
        initializerSimple_2
    [] > initializerSimple_2
      instanceCreation_2 > @
    [] > instanceCreation_2
      class__Point.constructor > @
        class__Point.new
        literal_12
        literal_13
    [] > literal_12
      prim__int.constructor_2 > @
        prim__int.new
        4
    [] > literal_13
      prim__int.constructor_2 > @
        prim__int.new
        5
    cage > r
    [] > variableDeclaration_3
      r.write > @
        initializerSimple_3
    [] > initializerSimple_3
      instanceCreation_3 > @
    [] > instanceCreation_3
      class__Point.constructor > @
        class__Point.new
        literal_14
        literal_15
    [] > literal_14
      prim__int.constructor_2 > @
        prim__int.new
        6
    [] > literal_15
      prim__int.constructor_2 > @
        prim__int.new
        7
    [] > statementExpression_4
      this.test > @
        this
        simpleReference_7
        simpleReference_8
        simpleReference_9
    [] > simpleReference_7
      p > @
    [] > simpleReference_8
      q > @
    [] > simpleReference_9
      r > @
    [] > statementExpression_5
      class__System.out.println > @
        class__System.out
        literal_16
    [] > literal_16
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_6
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_6
      this.super.constructor > @
        this.super

[] > class__Point
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Point" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    prim__int.constructor_1 > x
      prim__int.new
    prim__int.constructor_1 > y
      prim__int.new
  # null :: int -> int -> void
  [this x y] > constructor
    seq > @
      initialization
      statementExpression_7
      statementExpression_8
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_7
      fieldAccess_11.write > @
        simpleReference_10
    [] > fieldAccess_11
      this_3.x > @
    [] > this_3
      this > @
    [] > simpleReference_10
      x > @
    [] > statementExpression_8
      fieldAccess_12.write > @
        simpleReference_11
    [] > fieldAccess_12
      this_4.y > @
    [] > this_4
      this > @
    [] > simpleReference_11
      y > @

[args...] > main
  class__ShadowingPatternMatching.main > @
    *