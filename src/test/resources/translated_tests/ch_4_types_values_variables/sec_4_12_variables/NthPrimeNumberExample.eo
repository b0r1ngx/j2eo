# 2022-07-14T15:49:37.855799900
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__NthPrimeNumberExample
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__NthPrimeNumberExample" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      variableDeclaration_3
      variableDeclaration_4
      while_1
      statementExpression_1
      statementExpression_2
    prim__int.constructor_1 > n
      prim__int.new
    [] > variableDeclaration_1
      n.write > @
        initializerSimple_1
    [] > initializerSimple_1
      literal_1 > @
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        47
    prim__int.constructor_1 > num
      prim__int.new
    [] > variableDeclaration_2
      num.write > @
        initializerSimple_2
    [] > initializerSimple_2
      literal_2 > @
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        1
    prim__int.constructor_1 > count
      prim__int.new
    [] > variableDeclaration_3
      count.write > @
        initializerSimple_3
    [] > initializerSimple_3
      literal_3 > @
    [] > literal_3
      prim__int.constructor_2 > @
        prim__int.new
        0
    prim__int.constructor_1 > i
      prim__int.new
    [] > variableDeclaration_4
      TRUE > @
    [] > while_1
      binary_1.while > @
        [while_i]
          block_1 > @
    [] > binary_1
      simpleReference_1.less > @
        simpleReference_2
    [] > simpleReference_1
      count > @
    [] > simpleReference_2
      n > @
    [] > block_1
      seq > @
        statementExpression_3
        statementExpression_4
        ifThenElse_1
      [] > statementExpression_3
        simpleReference_3.write > @
          binary_2
      [] > simpleReference_3
        num > @
      [] > binary_2
        simpleReference_4.add > @
          literal_4
      [] > simpleReference_4
        num > @
      [] > literal_4
        prim__int.constructor_2 > @
          prim__int.new
          1
      [] > statementExpression_4
        for_loop_placeholder > @
      [] > ifThenElse_1
        binary_3.if > @
          block_2
          empty_2
      [] > binary_3
        simpleReference_5.eq > @
          simpleReference_6
      [] > simpleReference_5
        i > @
      [] > simpleReference_6
        num > @
      [] > block_2
        seq > @
          statementExpression_5
        [] > statementExpression_5
          simpleReference_7.write > @
            binary_4
        [] > simpleReference_7
          count > @
        [] > binary_4
          simpleReference_8.add > @
            literal_5
        [] > simpleReference_8
          count > @
        [] > literal_5
          prim__int.constructor_2 > @
            prim__int.new
            1
      [] > empty_2
        TRUE > @
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        binary_5
    [] > binary_5
      binary_6.add > @
        simpleReference_9
    [] > binary_6
      binary_7.add > @
        literal_6
    [] > binary_7
      literal_7.add > @
        simpleReference_10
    [] > literal_7
      class__String.constructor_2 > @
        class__String.new
        "The "
    [] > simpleReference_10
      n > @
    [] > literal_6
      class__String.constructor_2 > @
        class__String.new
        "th prime number is: "
    [] > simpleReference_9
      num > @
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        literal_8
    [] > literal_8
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_6
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_6
      this.super.constructor > @
        this.super

[args...] > main
  class__NthPrimeNumberExample.main > @
    *