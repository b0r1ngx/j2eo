# 2022-07-13T17:59:01.625568800
# j2eo team
+package ch_10_arrays.sec_10_4_array_access
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__SecondLargestElement
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SecondLargestElement" > className
    [this] > init
      seq > @
        TRUE
  # secondLargest :: int[] -> int
  [arr] > secondLargest
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      statementExpression_1
      statementExpression_2
      statementExpression_3
      return_1
    prim__int.constructor_1 > fmax
      prim__int.new
    [] > variableDeclaration_1
      fmax.write > @
        initializerSimple_1
    [] > initializerSimple_1
      literal_1 > @
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        0
    prim__int.constructor_1 > smax
      prim__int.new
    [] > variableDeclaration_2
      smax.write > @
        initializerSimple_2
    [] > initializerSimple_2
      literal_2 > @
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > statementExpression_1
      simpleReference_1.write > @
        arrayAccess_1
    [] > simpleReference_1
      fmax > @
    [] > arrayAccess_1
      simpleReference_2.get > @
        literal_3.v
    [] > simpleReference_2
      arr > @
    [] > literal_3
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > statementExpression_2
      simpleReference_3.write > @
        arrayAccess_2
    [] > simpleReference_3
      smax > @
    [] > arrayAccess_2
      simpleReference_4.get > @
        literal_4.v
    [] > simpleReference_4
      arr > @
    [] > literal_4
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > statementExpression_3
      for_loop_placeholder > @
    [] > return_1
      simpleReference_5 > @
    [] > simpleReference_5
      smax > @
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_3
      variableDeclaration_4
      statementExpression_4
      statementExpression_5
      statementExpression_6
      statementExpression_7
    prim__int.constructor_1 > length
      prim__int.new
    [] > variableDeclaration_3
      length.write > @
        initializerSimple_3
    [] > initializerSimple_3
      literal_5 > @
    [] > literal_5
      prim__int.constructor_2 > @
        prim__int.new
        10
    prim__int.constructor_1 > numbers
      prim__int.new
    [] > variableDeclaration_4
      numbers.write > @
        initializerSimple_4
    [] > initializerSimple_4
      literal_6 > @
    [] > literal_6
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > statementExpression_4
      simpleReference_6.write > @
        arrayCreation_1
    [] > simpleReference_6
      numbers > @
    [] > arrayCreation_1
      FALSE > @
    [] > statementExpression_5
      for_loop_placeholder > @
    [] > statementExpression_6
      class__System.out.println > @
        class__System.out
        binary_1
    [] > binary_1
      literal_7.add > @
        methodInvocation_1
    [] > literal_7
      class__String.constructor_2 > @
        class__String.new
        "Second largest element = "
    [] > methodInvocation_1
      this.secondLargest > @
        this
        simpleReference_7
    [] > simpleReference_7
      numbers > @
    [] > statementExpression_7
      class__System.out.println > @
        class__System.out
        literal_8
    [] > literal_8
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_8
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_8
      this.super.constructor > @
        this.super

[args...] > main
  class__SecondLargestElement.main > @
    *