# 2022-07-18T16:12:32.326072364
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__PrimitiveAndReferenceIdentity
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__PrimitiveAndReferenceIdentity" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      statementExpression_1
      statementExpression_2
      statementExpression_3
      variableDeclaration_3
      statementExpression_4
      variableDeclaration_4
      statementExpression_5
      statementExpression_6
      statementExpression_7
      statementExpression_8
    prim__int.constructor_1 > i1
      prim__int.new
    [] > variableDeclaration_1
      i1.write > @
        initializerSimple_1
    [] > initializerSimple_1
      literal_1 > @
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        3
    prim__int.constructor_1 > i2
      prim__int.new
    [] > variableDeclaration_2
      i2.write > @
        initializerSimple_2
    [] > initializerSimple_2
      simpleReference_1 > @
    [] > simpleReference_1
      i1 > @
    [] > statementExpression_1
      simpleReference_2.write > @
        literal_2
    [] > simpleReference_2
      i2 > @
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        4
    [] > statementExpression_2
      class__System.out.print > @
        class__System.out
        binary_1
    [] > binary_1
      literal_3.add > @
        simpleReference_3
    [] > literal_3
      class__String.constructor_2 > @
        class__String.new
        "i1=="
    [] > simpleReference_3
      i1 > @
    [] > statementExpression_3
      class__System.out.println > @
        class__System.out
        binary_2
    [] > binary_2
      literal_4.add > @
        simpleReference_4
    [] > literal_4
      class__String.constructor_2 > @
        class__String.new
        " but i2=="
    [] > simpleReference_4
      i2 > @
    cage > v1
    [] > variableDeclaration_3
      v1.write > @
        initializerSimple_3
    [] > initializerSimple_3
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__Value.constructor > @
        class__Value.new
    [] > statementExpression_4
      fieldAccess_3.write > @
        literal_5
    [] > fieldAccess_3
      simpleReference_5.val > @
    [] > simpleReference_5
      v1 > @
    [] > literal_5
      prim__int.constructor_2 > @
        prim__int.new
        5
    cage > v2
    [] > variableDeclaration_4
      v2.write > @
        initializerSimple_4
    [] > initializerSimple_4
      simpleReference_6 > @
    [] > simpleReference_6
      v1 > @
    [] > statementExpression_5
      fieldAccess_4.write > @
        literal_6
    [] > fieldAccess_4
      simpleReference_7.val > @
    [] > simpleReference_7
      v2 > @
    [] > literal_6
      prim__int.constructor_2 > @
        prim__int.new
        6
    [] > statementExpression_6
      class__System.out.print > @
        class__System.out
        binary_3
    [] > binary_3
      literal_7.add > @
        fieldAccess_6
    [] > literal_7
      class__String.constructor_2 > @
        class__String.new
        "v1.val=="
    [] > fieldAccess_6
      simpleReference_8.val > @
    [] > simpleReference_8
      v1 > @
    [] > statementExpression_7
      class__System.out.println > @
        class__System.out
        binary_4
    [] > binary_4
      literal_8.add > @
        fieldAccess_8
    [] > literal_8
      class__String.constructor_2 > @
        class__String.new
        " and v2.val=="
    [] > fieldAccess_8
      simpleReference_9.val > @
    [] > simpleReference_9
      v2 > @
    [] > statementExpression_8
      class__System.out.println > @
        class__System.out
        literal_9
    [] > literal_9
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_9
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_9
      this.super.constructor > @
        this.super

[] > class__Value
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Value" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    prim__int.constructor_1 > val
      prim__int.new
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_10
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_10
      this.super.constructor > @
        this.super

[args...] > main
  class__PrimitiveAndReferenceIdentity.main > @
    *