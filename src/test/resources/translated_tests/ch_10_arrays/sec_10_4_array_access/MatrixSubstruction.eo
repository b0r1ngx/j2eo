# 2022-07-13T17:59:01.514245500
# j2eo team
+package ch_10_arrays.sec_10_4_array_access
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__MatrixSubstruction
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__MatrixSubstruction" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      variableDeclaration_3
      variableDeclaration_4
      variableDeclaration_5
      statementExpression_1
      statementExpression_2
      statementExpression_3
      statementExpression_4
      statementExpression_5
      statementExpression_6
      statementExpression_7
      statementExpression_8
      statementExpression_9
      statementExpression_10
      statementExpression_11
    prim__int.constructor_1 > row
      prim__int.new
    [] > variableDeclaration_1
      row.write > @
        initializerSimple_1
    [] > initializerSimple_1
      literal_1 > @
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        0
    prim__int.constructor_1 > column
      prim__int.new
    [] > variableDeclaration_2
      column.write > @
        initializerSimple_2
    [] > initializerSimple_2
      literal_2 > @
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        0
    prim__int.constructor_1 > a
      prim__int.new
    [] > variableDeclaration_3
      a.write > @
        initializerSimple_3
    [] > initializerSimple_3
      literal_3 > @
    [] > literal_3
      prim__int.constructor_2 > @
        prim__int.new
        0
    prim__int.constructor_1 > b
      prim__int.new
    [] > variableDeclaration_4
      b.write > @
        initializerSimple_4
    [] > initializerSimple_4
      literal_4 > @
    [] > literal_4
      prim__int.constructor_2 > @
        prim__int.new
        0
    prim__int.constructor_1 > c
      prim__int.new
    [] > variableDeclaration_5
      c.write > @
        initializerSimple_5
    [] > initializerSimple_5
      literal_5 > @
    [] > literal_5
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > statementExpression_1
      simpleReference_1.write > @
        literal_6
    [] > simpleReference_1
      row > @
    [] > literal_6
      prim__int.constructor_2 > @
        prim__int.new
        3
    [] > statementExpression_2
      simpleReference_2.write > @
        literal_7
    [] > simpleReference_2
      column > @
    [] > literal_7
      prim__int.constructor_2 > @
        prim__int.new
        4
    [] > statementExpression_3
      simpleReference_3.write > @
        arrayCreation_1
    [] > simpleReference_3
      a > @
    [] > arrayCreation_1
      FALSE > @
    [] > statementExpression_4
      simpleReference_4.write > @
        arrayCreation_2
    [] > simpleReference_4
      b > @
    [] > arrayCreation_2
      FALSE > @
    [] > statementExpression_5
      simpleReference_5.write > @
        arrayCreation_3
    [] > simpleReference_5
      c > @
    [] > arrayCreation_3
      FALSE > @
    [] > statementExpression_6
      simpleReference_6.write > @
        methodInvocation_1
    [] > simpleReference_6
      a > @
    [] > methodInvocation_1
      this.getMatrix > @
        this
        simpleReference_7
        literal_8
    [] > simpleReference_7
      a > @
    [] > literal_8
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > statementExpression_7
      simpleReference_8.write > @
        methodInvocation_2
    [] > simpleReference_8
      b > @
    [] > methodInvocation_2
      this.getMatrix > @
        this
        simpleReference_9
        literal_9
    [] > simpleReference_9
      b > @
    [] > literal_9
      prim__int.constructor_2 > @
        prim__int.new
        2
    [] > statementExpression_8
      simpleReference_10.write > @
        methodInvocation_3
    [] > simpleReference_10
      c > @
    [] > methodInvocation_3
      this.subMatrix > @
        this
        simpleReference_11
        simpleReference_12
    [] > simpleReference_11
      a > @
    [] > simpleReference_12
      b > @
    [] > statementExpression_9
      class__System.out.println > @
        class__System.out
        literal_10
    [] > literal_10
      class__String.constructor_2 > @
        class__String.new
        "Subtraction (C): "
    [] > statementExpression_10
      for_loop_placeholder > @
    [] > statementExpression_11
      class__System.out.println > @
        class__System.out
        literal_11
    [] > literal_11
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # getMatrix :: int[][] -> int -> int[][]
  [temp factor] > getMatrix
    seq > @
      statementExpression_12
      return_1
    [] > statementExpression_12
      for_loop_placeholder > @
    [] > return_1
      simpleReference_13 > @
    [] > simpleReference_13
      temp > @
  # subMatrix :: int[][] -> int[][] -> int[][]
  [a b] > subMatrix
    seq > @
      variableDeclaration_6
      variableDeclaration_7
      variableDeclaration_8
      statementExpression_13
      return_2
    prim__int.constructor_1 > row
      prim__int.new
    [] > variableDeclaration_6
      row.write > @
        initializerSimple_6
    [] > initializerSimple_6
      fieldAccess_3 > @
    [] > fieldAccess_3
      simpleReference_14.length > @
    [] > simpleReference_14
      a > @
    prim__int.constructor_1 > column
      prim__int.new
    [] > variableDeclaration_7
      column.write > @
        initializerSimple_7
    [] > initializerSimple_7
      fieldAccess_4 > @
    [] > fieldAccess_4
      arrayAccess_1.length > @
    [] > arrayAccess_1
      simpleReference_15.get > @
        literal_12.v
    [] > simpleReference_15
      a > @
    [] > literal_12
      prim__int.constructor_2 > @
        prim__int.new
        0
    prim__int.constructor_1 > sub
      prim__int.new
    [] > variableDeclaration_8
      sub.write > @
        initializerSimple_8
    [] > initializerSimple_8
      arrayCreation_4 > @
    [] > arrayCreation_4
      FALSE > @
    [] > statementExpression_13
      for_loop_placeholder > @
    [] > return_2
      simpleReference_16 > @
    [] > simpleReference_16
      sub > @
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_14
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_14
      this.super.constructor > @
        this.super

[args...] > main
  class__MatrixSubstruction.main > @
    *