# 2022-07-13T17:59:03.506533700
# j2eo team
+package ch_8_classes.sec_8_4_method_declarations.sec_8_4_8_inheritance_overrideing_and_hiding.sec_8_4_8_4_inheriting_methods_with_override_equivalent_signatures
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__System
+alias stdlib.lang.class__String

[] > class__A
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__A" > className
    [this] > init
      seq > @
        TRUE
    # p :: null -> void
    [this] > p
      seq > @
        statementExpression_1
      [] > statementExpression_1
        class__System.out.println > @
          class__System.out
          literal_1
      [] > literal_1
        class__String.constructor_2 > @
          class__String.new
          "Hi!"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_2
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_2
      this.super.constructor > @
        this.super

[] > class__C
  class__A > super
  super > @
  [] > new
    class__A.new > super
    super > @
    "class__C" > className
    [this] > init
      seq > @
        TRUE
    # p :: null -> void
    [this] > p
      seq > @
        statementExpression_3
      [] > statementExpression_3
        class__System.out.println > @
          class__System.out
          literal_2
      [] > literal_2
        class__String.constructor_2 > @
          class__String.new
          "Buy!"
    # p :: String -> void
    [this s] > p
      seq > @
        statementExpression_4
      [] > statementExpression_4
        class__System.out.println > @
          class__System.out
          simpleReference_1
      [] > simpleReference_1
        s > @
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_5
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      this.super.constructor > @
        this.super

[] > class__SameNamesOfInheritedMethods
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SameNamesOfInheritedMethods" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      statementExpression_6
      statementExpression_7
      statementExpression_8
    cage > c
    [] > variableDeclaration_1
      c.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__C.constructor > @
        class__C.new
    [] > statementExpression_6
      c.p > @
        c
    [] > statementExpression_7
      c.p > @
        c
        literal_3
    [] > literal_3
      class__String.constructor_2 > @
        class__String.new
        "Good!"
    [] > statementExpression_8
      class__System.out.println > @
        class__System.out
        literal_4
    [] > literal_4
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_9
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_9
      this.super.constructor > @
        this.super

[args...] > main
  class__SameNamesOfInheritedMethods.main > @
    *