# 2022-07-18T16:12:39.450163788
# j2eo team
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__System
+alias stdlib.lang.class__String

[] > class__SimpleWideningRef
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SimpleWideningRef" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      statementExpression_1
      statementExpression_2
    cage > s
    [] > variableDeclaration_1
      s.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__Sub.constructor > @
        class__Sub.new
    cage > b
    [] > variableDeclaration_2
      b.write > @
        initializerSimple_2
    [] > initializerSimple_2
      cast_1 > @
    [] > cast_1
      class__Base.from > @
        simpleReference_1
    [] > simpleReference_1
      s > @
    [] > statementExpression_1
      b.print > @
        b
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        literal_1
    [] > literal_1
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[] > class__Base
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Base" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    # print :: null -> void
    [this] > print
      seq > @
        statementExpression_4
      [] > statementExpression_4
        class__System.out.println > @
          class__System.out
          literal_2
      [] > literal_2
        class__String.constructor_2 > @
          class__String.new
          "base"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_5
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      this.super.constructor > @
        this.super

[] > class__Sub
  class__Base > super
  super > @
  [] > new
    class__Base.new > super
    super > @
    "class__Sub" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    # print :: null -> void
    [this] > print
      seq > @
        statementExpression_6
      [] > statementExpression_6
        class__System.out.println > @
          class__System.out
          literal_3
      [] > literal_3
        class__String.constructor_2 > @
          class__String.new
          "sub"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_7
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_7
      this.super.constructor > @
        this.super

[args...] > main
  class__SimpleWideningRef.main > @
    *