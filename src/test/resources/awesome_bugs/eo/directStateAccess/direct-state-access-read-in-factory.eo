# 2022-07-18T12:42:28.086955800
# j2eo team
+package directStateAccess
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__System
+alias stdlib.primitives.prim__int

[] > class__AFactory
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__AFactory" > className
    [this] > init
      seq > @
        TRUE
  [] > class__GetA
    class__Object > super
    super > @
    [] > new
      class__Object.new > super
      super > @
      "class__GetA" > className
      [this] > init
        seq > @
          variableDeclaration_1
        [] > variableDeclaration_1
          this.state.write > @
            initializerSimple_1
        [] > initializerSimple_1
          literal_1 > @
        [] > literal_1
          prim__int.constructor_2 > @
            prim__int.new
            0
      prim__int.constructor_1 > state
        prim__int.new
    # null :: null -> void
    [this] > constructor
      seq > @
        initialization
        statementExpression_1
        this
      [] > initialization
        this.init > @
          this
      [] > statementExpression_1
        this.super.constructor > @
          this.super
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_2
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_2
      this.super.constructor > @
        this.super

[] > class__B
  class__AFactory.class__GetA > super
  super > @
  [] > new
    class__AFactory.class__GetA.new > super
    super > @
    "class__B" > className
    [this] > init
      seq > @
        TRUE
    # n :: int -> int
    [this x] > n
      seq > @
        return_1
      [] > return_1
        binary_1 > @
      [] > binary_1
        simpleReference_1.add > @
          simpleReference_2
      [] > simpleReference_1
        state > @
      [] > simpleReference_2
        x > @
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[] > class__Test
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Test" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_2
      statementExpression_4
    cage > b
    [] > variableDeclaration_2
      b.write > @
        initializerSimple_3
    [] > initializerSimple_3
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__B.constructor > @
        class__B.new
    [] > statementExpression_4
      class__System.out.println > @
        class__System.out
        methodInvocation_1
    [] > methodInvocation_1
      b.n > @
        b
        literal_2
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        3
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_5
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      this.super.constructor > @
        this.super

[args...] > main
  class__Test.main > @
    *