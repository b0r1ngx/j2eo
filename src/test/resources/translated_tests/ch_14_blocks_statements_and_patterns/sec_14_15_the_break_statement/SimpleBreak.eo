# 2022-07-13T17:59:01.912231700
# j2eo team
+package ch_14_blocks_statements_and_patterns.sec_14_15_the_break_statement
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__SimpleBreak
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SimpleBreak" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      while_1
      statementExpression_1
    prim__int.constructor_1 > a
      prim__int.new
    [] > variableDeclaration_1
      a.write > @
        initializerSimple_1
    [] > initializerSimple_1
      literal_1 > @
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > while_1
      literal_2.while > @
        [while_i]
          block_1 > @
    [] > literal_2
      prim__boolean.constructor_2 > @
        prim__boolean.new
        TRUE
    [] > block_1
      seq > @
        ifThenElse_1
      [] > ifThenElse_1
        binary_1.if > @
          block_2
          empty_2
      [] > binary_1
        unaryPostfix_1.greater > @
          literal_3
      [] > unaryPostfix_1
        simpleReference_1.inc_post > @
      [] > simpleReference_1
        a > @
      [] > literal_3
        prim__int.constructor_2 > @
          prim__int.new
          10
      [] > block_2
        seq > @
          break_1
      [] > empty_2
        TRUE > @
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        literal_4
    [] > literal_4
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_2
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_2
      this.super.constructor > @
        this.super

[args...] > main
  class__SimpleBreak.main > @
    *