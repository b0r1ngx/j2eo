# 2022-07-14T15:57:45.562152
# j2eo team
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__System
+alias stdlib.lang.class__String
+alias eo/org/polystat/stdlib.class__util

[] > class__SimpleNarrowRefConversion
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SimpleNarrowRefConversion" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      ifThenElse_1
      statementExpression_1
    cage > lstObj
    [] > variableDeclaration_1
      lstObj.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__ArrayList.constructor > @
        class__ArrayList.new
    [] > ifThenElse_1
      instanceOf_1.if > @
        block_1
        empty_1
    [] > instanceOf_1
      instance_of_placeholder > @
    [] > block_1
      seq > @
        variableDeclaration_2
        statementExpression_2
      cage > lst
      [] > variableDeclaration_2
        lst.write > @
          initializerSimple_2
      [] > initializerSimple_2
        cast_1 > @
      [] > cast_1
        class__List.from > @
          simpleReference_1
      [] > simpleReference_1
        lstObj > @
      [] > statementExpression_2
        class__System.out.println > @
          class__System.out
          binary_1
      [] > binary_1
        literal_1.add > @
          methodInvocation_1
      [] > literal_1
        class__String.constructor_2 > @
          class__String.new
          "does contain 123? -> "
      [] > methodInvocation_1
        lst.contains > @
          lst
          literal_2
      [] > literal_2
        prim__int.constructor_2 > @
          prim__int.new
          123
    [] > empty_1
      TRUE > @
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        literal_3
    [] > literal_3
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[args...] > main
  class__SimpleNarrowRefConversion.main > @
    *