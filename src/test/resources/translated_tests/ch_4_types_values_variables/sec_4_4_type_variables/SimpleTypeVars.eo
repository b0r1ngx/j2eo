# 2022-07-18T16:13:07.266797621
# j2eo team
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__System
+alias stdlib.lang.class__String

[] > class__SimpleTypeVars
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SimpleTypeVars" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      statementExpression_1
      statementExpression_2
    cage > ct
    [] > variableDeclaration_1
      ct.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__CT.constructor > @
        class__CT.new
    [] > statementExpression_1
      this.test > @
        this
        simpleReference_1
    [] > simpleReference_1
      ct > @
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        literal_1
    [] > literal_1
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[] > class__C
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__C" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    # mCPublic :: null -> void
    [this] > mCPublic
      seq > @
        statementExpression_4
      [] > statementExpression_4
        class__System.out.println > @
          class__System.out
          literal_2
      [] > literal_2
        class__String.constructor_2 > @
          class__String.new
          "mCPublic()"
    # mCProtected :: null -> void
    [this] > mCProtected
      seq > @
        statementExpression_5
      [] > statementExpression_5
        class__System.out.println > @
          class__System.out
          literal_3
      [] > literal_3
        class__String.constructor_2 > @
          class__String.new
          "mCProtected()"
    # mCPackage :: null -> void
    [this] > mCPackage
      seq > @
        statementExpression_6
      [] > statementExpression_6
        class__System.out.println > @
          class__System.out
          literal_4
      [] > literal_4
        class__String.constructor_2 > @
          class__String.new
          "mCPackage()"
    # mCPrivate :: null -> void
    [this] > mCPrivate
      seq > @
        statementExpression_7
      [] > statementExpression_7
        class__System.out.println > @
          class__System.out
          literal_5
      [] > literal_5
        class__String.constructor_2 > @
          class__String.new
          "mCPrivate()"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_8
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_8
      this.super.constructor > @
        this.super

[] > class__CT
  class__C > super
  super > @
  [] > new
    class__C.new > super
    super > @
    "class__CT" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    # mI :: null -> void
    [this] > mI
      seq > @
        statementExpression_9
      [] > statementExpression_9
        class__System.out.println > @
          class__System.out
          literal_6
      [] > literal_6
        class__String.constructor_2 > @
          class__String.new
          "mI()"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_10
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_10
      this.super.constructor > @
        this.super

[args...] > main
  class__SimpleTypeVars.main > @
    *