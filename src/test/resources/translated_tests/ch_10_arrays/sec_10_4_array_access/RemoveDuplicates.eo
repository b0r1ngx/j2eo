# 2022-07-14T15:50:21.472949600
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String
+alias eo/org/polystat/stdlib.util.class__Arrays

[] > class__RemoveDuplicates
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__RemoveDuplicates" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      statementExpression_1
      statementExpression_2
      statementExpression_3
    prim__int.constructor_1 > arr
      prim__int.new
    [] > variableDeclaration_1
      arr.write > @
        initializerArray_1
    [] > initializerArray_1
      * > @
        initializerSimple_1
        initializerSimple_2
        initializerSimple_3
        initializerSimple_4
        initializerSimple_5
        initializerSimple_6
        initializerSimple_7
    [] > initializerSimple_1
      literal_1 > @
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        10
    [] > initializerSimple_2
      literal_2 > @
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        10
    [] > initializerSimple_3
      literal_3 > @
    [] > literal_3
      prim__int.constructor_2 > @
        prim__int.new
        20
    [] > initializerSimple_4
      literal_4 > @
    [] > literal_4
      prim__int.constructor_2 > @
        prim__int.new
        30
    [] > initializerSimple_5
      literal_5 > @
    [] > literal_5
      prim__int.constructor_2 > @
        prim__int.new
        40
    [] > initializerSimple_6
      literal_6 > @
    [] > literal_6
      prim__int.constructor_2 > @
        prim__int.new
        40
    [] > initializerSimple_7
      literal_7 > @
    [] > literal_7
      prim__int.constructor_2 > @
        prim__int.new
        50
    prim__int.constructor_1 > newArr
      prim__int.new
    [] > variableDeclaration_2
      newArr.write > @
        initializerSimple_8
    [] > initializerSimple_8
      methodInvocation_1 > @
    [] > methodInvocation_1
      this.removeDuplicates > @
        this
        simpleReference_1
    [] > simpleReference_1
      arr > @
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        binary_1
    [] > binary_1
      literal_8.add > @
        methodInvocation_2
    [] > literal_8
      class__String.constructor_2 > @
        class__String.new
        "Original array: "
    [] > methodInvocation_2
      class__Arrays.toString > @
        simpleReference_3
    [] > simpleReference_3
      arr > @
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        binary_2
    [] > binary_2
      literal_9.add > @
        methodInvocation_3
    [] > literal_9
      class__String.constructor_2 > @
        class__String.new
        "After removing duplicates: "
    [] > methodInvocation_3
      class__Arrays.toString > @
        simpleReference_5
    [] > simpleReference_5
      newArr > @
    [] > statementExpression_3
      class__System.out.println > @
        class__System.out
        literal_10
    [] > literal_10
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # removeDuplicates :: int[] -> int[]
  [arr] > removeDuplicates
    seq > @
      variableDeclaration_3
      variableDeclaration_4
      statementExpression_4
      ifThenElse_1
      return_1
    prim__int.constructor_1 > j
      prim__int.new
    [] > variableDeclaration_3
      j.write > @
        initializerSimple_9
    [] > initializerSimple_9
      literal_11 > @
    [] > literal_11
      prim__int.constructor_2 > @
        prim__int.new
        0
    prim__int.constructor_1 > lastIndex
      prim__int.new
    [] > variableDeclaration_4
      lastIndex.write > @
        initializerSimple_10
    [] > initializerSimple_10
      binary_3 > @
    [] > binary_3
      fieldAccess_4.sub > @
        literal_12
    [] > fieldAccess_4
      simpleReference_6.length > @
    [] > simpleReference_6
      arr > @
    [] > literal_12
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > statementExpression_4
      for_loop_placeholder > @
    [] > ifThenElse_1
      binary_4.if > @
        statementExpression_5
        empty_1
    [] > binary_4
      arrayAccess_1.not_eq > @
        arrayAccess_2
    [] > arrayAccess_1
      simpleReference_7.get > @
        simpleReference_8.v
    [] > simpleReference_7
      arr > @
    [] > simpleReference_8
      j > @
    [] > arrayAccess_2
      simpleReference_9.get > @
        simpleReference_10.v
    [] > simpleReference_9
      arr > @
    [] > simpleReference_10
      lastIndex > @
    [] > statementExpression_5
      arrayAccess_3.write > @
        arrayAccess_4
    [] > arrayAccess_3
      simpleReference_11.get > @
        unaryPostfix_1.v
    [] > simpleReference_11
      arr > @
    [] > unaryPostfix_1
      simpleReference_12.inc_post > @
    [] > simpleReference_12
      j > @
    [] > arrayAccess_4
      simpleReference_13.get > @
        simpleReference_14.v
    [] > simpleReference_13
      arr > @
    [] > simpleReference_14
      lastIndex > @
    [] > empty_1
      TRUE > @
    [] > return_1
      methodInvocation_4 > @
    [] > methodInvocation_4
      class__Arrays.copyOf > @
        simpleReference_16
        simpleReference_17
    [] > simpleReference_16
      arr > @
    [] > simpleReference_17
      j > @
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_6
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_6
      this.super.constructor > @
        this.super

[args...] > main
  class__RemoveDuplicates.main > @
    *