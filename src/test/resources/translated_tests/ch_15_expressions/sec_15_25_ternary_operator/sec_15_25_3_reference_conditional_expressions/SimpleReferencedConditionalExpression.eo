# 2022-07-13T17:59:02.193174
# j2eo team
+package ch_15_expressions.sec_15_25_ternary_operator.sec_15_25_3_reference_conditional_expressions
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__String
+alias stdlib.primitives.prim__int

[] > class__SimpleReferencedConditionalExpression
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SimpleReferencedConditionalExpression" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      variableDeclaration_3
      statementExpression_1
      statementExpression_2
    cage > s
    [] > variableDeclaration_1
      s.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__S.constructor > @
        class__S.new
        literal_1
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        0
    cage > t
    [] > variableDeclaration_2
      t.write > @
        initializerSimple_2
    [] > initializerSimple_2
      instanceCreation_2 > @
    [] > instanceCreation_2
      class__T.constructor > @
        class__T.new
        literal_2
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        1
    cage > res
    [] > variableDeclaration_3
      res.write > @
        initializerSimple_3
    [] > initializerSimple_3
      simpleReference_1 > @
    [] > simpleReference_1
      expression_placeholder > @
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        fieldAccess_2
    [] > fieldAccess_2
      simpleReference_2.id > @
    [] > simpleReference_2
      res > @
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        literal_3
    [] > literal_3
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[] > class__S
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__S" > className
    [this] > init
      seq > @
        TRUE
    prim__int.constructor_1 > id
      prim__int.new
  # null :: int -> void
  [this id] > constructor
    seq > @
      initialization
      statementExpression_4
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_4
      fieldAccess_4.write > @
        simpleReference_3
    [] > fieldAccess_4
      this_1.id > @
    [] > this_1
      this > @
    [] > simpleReference_3
      id > @

[] > class__T
  class__S > super
  super > @
  [] > new
    class__S.new > super
    super > @
    "class__T" > className
    [this] > init
      seq > @
        TRUE
  # null :: int -> void
  [this id] > constructor
    seq > @
      initialization
      statementExpression_5
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      this.this.super.constructor > @
        this.this.super
        simpleReference_4
    [] > simpleReference_4
      id > @

[args...] > main
  class__SimpleReferencedConditionalExpression.main > @
    *