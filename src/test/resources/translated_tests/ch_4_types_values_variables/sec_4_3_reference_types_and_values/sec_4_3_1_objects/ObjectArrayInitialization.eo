# 2022-07-18T16:08:45.787311203
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__String
+alias stdlib.primitives.prim__int

[] > class__ObjectArrayInitialization
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__ObjectArrayInitialization" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      statementExpression_1
      statementExpression_2
    cage > a
    [] > variableDeclaration_1
      a.write > @
        initializerArray_1
    [] > initializerArray_1
      * > @
        initializerSimple_1
        initializerSimple_2
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__Point.constructor > @
        class__Point.new
        literal_1
        literal_2
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > initializerSimple_2
      instanceCreation_2 > @
    [] > instanceCreation_2
      class__Point.constructor > @
        class__Point.new
        literal_3
        literal_4
    [] > literal_3
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > literal_4
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        binary_1
    [] > binary_1
      literal_5.add > @
        fieldAccess_2
    [] > literal_5
      class__String.constructor_2 > @
        class__String.new
        "a[1].x = "
    [] > fieldAccess_2
      arrayAccess_1.x > @
    [] > arrayAccess_1
      simpleReference_1.get > @
        literal_6.v
    [] > simpleReference_1
      a > @
    [] > literal_6
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        literal_7
    [] > literal_7
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[] > class__Point
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Point" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    prim__int.constructor_1 > x
      prim__int.new
    prim__int.constructor_1 > y
      prim__int.new
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_4
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_4
      class__System.out.println > @
        class__System.out
        literal_8
    [] > literal_8
      class__String.constructor_2 > @
        class__String.new
        "default"
  # null :: int -> int -> void
  [this x y] > constructor
    seq > @
      initialization
      statementExpression_5
      statementExpression_6
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      fieldAccess_5.write > @
        simpleReference_2
    [] > fieldAccess_5
      this_2.x > @
    [] > this_2
      this > @
    [] > simpleReference_2
      x > @
    [] > statementExpression_6
      fieldAccess_6.write > @
        simpleReference_3
    [] > fieldAccess_6
      this_3.y > @
    [] > this_3
      this > @
    [] > simpleReference_3
      y > @
  cage > origin

[args...] > main
  class__ObjectArrayInitialization.main > @
    *