# 2022-07-18T16:08:34.257135663
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__A
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__A" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    # add :: int -> int -> int
    [this a b] > add
      seq > @
        return_1
      [] > return_1
        binary_1 > @
      [] > binary_1
        simpleReference_1.add > @
          simpleReference_2
      [] > simpleReference_1
        a > @
      [] > simpleReference_2
        b > @
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_1
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_1
      this.super.constructor > @
        this.super

[] > class__B
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__B" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    # printInt :: int -> void
    [this v] > printInt
      seq > @
        statementExpression_2
      [] > statementExpression_2
        class__System.out.println > @
          class__System.out
          simpleReference_3
      [] > simpleReference_3
        v > @
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[] > class__C
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__C" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    cage > t
    cage > e
  # null :: T -> E -> void
  [this t e] > constructor
    seq > @
      initialization
      statementExpression_4
      statementExpression_5
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_4
      fieldAccess_2.write > @
        simpleReference_4
    [] > fieldAccess_2
      this_3.t > @
    [] > this_3
      this > @
    [] > simpleReference_4
      t > @
    [] > statementExpression_5
      fieldAccess_3.write > @
        simpleReference_5
    [] > fieldAccess_3
      this_4.e > @
    [] > this_4
      this > @
    [] > simpleReference_5
      e > @

[] > class__GenericClassWithMultipleTypeVars
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__GenericClassWithMultipleTypeVars" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      statementExpression_6
      statementExpression_7
    cage > c
    [] > variableDeclaration_1
      c.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__C.constructor > @
        class__C.new
        instanceCreation_2
        instanceCreation_3
    [] > instanceCreation_2
      class__A.constructor > @
        class__A.new
    [] > instanceCreation_3
      class__B.constructor > @
        class__B.new
    [] > statementExpression_6
      c.e.printInt > @
        c.e
        methodInvocation_1
    [] > methodInvocation_1
      c.t.add > @
        c.t
        literal_1
        literal_2
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        2
    [] > statementExpression_7
      class__System.out.println > @
        class__System.out
        literal_3
    [] > literal_3
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_8
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_8
      this.super.constructor > @
        this.super

[args...] > main
  class__GenericClassWithMultipleTypeVars.main > @
    *