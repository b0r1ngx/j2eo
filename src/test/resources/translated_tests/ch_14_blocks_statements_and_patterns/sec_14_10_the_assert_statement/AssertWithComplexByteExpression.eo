# 2022-07-18T16:11:19.913732772
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__byte
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__AssertWithComplexByteExpression
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__AssertWithComplexByteExpression" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      assert_1
      statementExpression_1
    prim__byte.constructor_1 > a
      prim__byte.new
    [] > variableDeclaration_1
      a.write > @
        initializerSimple_1
    [] > initializerSimple_1
      cast_1 > @
    [] > cast_1
      prim__byte.from > @
        literal_1
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        0
    prim__byte.constructor_1 > b
      prim__byte.new
    [] > variableDeclaration_2
      b.write > @
        initializerSimple_2
    [] > initializerSimple_2
      cast_2 > @
    [] > cast_2
      prim__byte.from > @
        unaryPrefix_1
    [] > unaryPrefix_1
      literal_2.neg > @
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > assert_1
      binary_1.if > @
        TRUE
        []
          literal_3 > msg
    [] > binary_1
      parenthesized_1.greater > @
        cast_3
    [] > parenthesized_1
      binary_2 > @
    [] > binary_2
      simpleReference_1.write > @
        unaryPrefix_2
    [] > simpleReference_1
      b > @
    [] > unaryPrefix_2
      simpleReference_2.inc_pre > @
    [] > simpleReference_2
      a > @
    [] > cast_3
      prim__byte.from > @
        literal_4
    [] > literal_4
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > literal_3
      class__String.constructor_2 > @
        class__String.new
        "Never printed"
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        literal_5
    [] > literal_5
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_2
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_2
      this.super.constructor > @
        this.super

[args...] > main
  class__AssertWithComplexByteExpression.main > @
    *