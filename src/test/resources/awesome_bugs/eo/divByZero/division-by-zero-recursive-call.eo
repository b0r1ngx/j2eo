# 2022-07-18T12:42:28.275428300
# j2eo team
+package divByZero
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__System
+alias stdlib.primitives.prim__int

[] > class__A
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__A" > className
    [this] > init
      seq > @
        TRUE
    # doSomething :: int -> int
    [this number] > doSomething
      seq > @
        ifThenElse_1
        return_1
      [] > ifThenElse_1
        binary_1.if > @
          block_1
          empty_1
      [] > binary_1
        simpleReference_1.less > @
          literal_1
      [] > simpleReference_1
        number > @
      [] > literal_1
        prim__int.constructor_2 > @
          prim__int.new
          0
      [] > block_1
        seq > @
          return_2
        [] > return_2
          literal_2 > @
        [] > literal_2
          prim__int.constructor_2 > @
            prim__int.new
            1
      [] > empty_1
        TRUE > @
      [] > return_1
        binary_2 > @
      [] > binary_2
        simpleReference_2.div > @
          methodInvocation_1
      [] > simpleReference_2
        number > @
      [] > methodInvocation_1
        this.doSomething > @
          this
          binary_3
      [] > binary_3
        simpleReference_3.sub > @
          literal_3
      [] > simpleReference_3
        number > @
      [] > literal_3
        prim__int.constructor_2 > @
          prim__int.new
          1
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_1
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_1
      this.super.constructor > @
        this.super

[] > class__Test
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Test" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      variableDeclaration_2
      statementExpression_2
    cage > a
    [] > variableDeclaration_1
      a.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__A.constructor > @
        class__A.new
    prim__int.constructor_1 > result
      prim__int.new
    [] > variableDeclaration_2
      result.write > @
        initializerSimple_2
    [] > initializerSimple_2
      methodInvocation_2 > @
    [] > methodInvocation_2
      a.doSomething > @
        a
        literal_4
    [] > literal_4
      prim__int.constructor_2 > @
        prim__int.new
        5
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        simpleReference_5
    [] > simpleReference_5
      result > @
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[args...] > main
  class__Test.main > @
    *