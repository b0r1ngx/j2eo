# 2022-07-18T12:42:28.563422600
# j2eo team
+package inheritance
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.util.class__Random
+alias eo/org/polystat/stdlib.util.class__Random

[] > class__Base
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Base" > className
    [this] > init
      seq > @
        variableDeclaration_1
      [] > variableDeclaration_1
        this.x.write > @
          initializerSimple_1
      [] > initializerSimple_1
        literal_1 > @
      [] > literal_1
        prim__int.constructor_2 > @
          prim__int.new
          0
    prim__int.constructor_1 > x
      prim__int.new
    # getX :: null -> int
    [this] > getX
      seq > @
        return_1
      [] > return_1
        simpleReference_1 > @
      [] > simpleReference_1
        x > @
    # n :: null -> void
    [this] > n
      seq > @
        statementExpression_1
      [] > statementExpression_1
        simpleReference_2.write > @
          literal_2
      [] > simpleReference_2
        x > @
      [] > literal_2
        prim__int.constructor_2 > @
          prim__int.new
          0
    # m :: null -> void
    [this] > m
      seq > @
        statementExpression_2
      [] > statementExpression_2
        simpleReference_3.inc_post > @
      [] > simpleReference_3
        x > @
    # o :: null -> void
    [this] > o
      seq > @
        statementExpression_3
      [] > statementExpression_3
        this.m > @
          this
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_4
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_4
      this.super.constructor > @
        this.super

[] > class__Derived
  class__Base > super
  super > @
  [] > new
    class__Base.new > super
    super > @
    "class__Derived" > className
    [this] > init
      seq > @
        TRUE
    # n :: null -> void
    [this] > n
      seq > @
        variableDeclaration_2
        variableDeclaration_3
        ifThenElse_1
      cage > rand
      [] > variableDeclaration_2
        rand.write > @
          initializerSimple_3
      [] > initializerSimple_3
        instanceCreation_1 > @
      [] > instanceCreation_1
        class__Random.constructor > @
          class__Random.new
      prim__int.constructor_1 > randomNumber
        prim__int.new
      [] > variableDeclaration_3
        randomNumber.write > @
          initializerSimple_4
      [] > initializerSimple_4
        methodInvocation_1 > @
      [] > methodInvocation_1
        rand.nextInt > @
          rand
      [] > ifThenElse_1
        binary_1.if > @
          block_1
          empty_1
      [] > binary_1
        simpleReference_5.eq > @
          literal_3
      [] > simpleReference_5
        randomNumber > @
      [] > literal_3
        prim__int.constructor_2 > @
          prim__int.new
          0
      [] > block_1
        seq > @
          statementExpression_5
        [] > statementExpression_5
          this.m > @
            this
      [] > empty_1
        TRUE > @
    # m :: null -> void
    [this] > m
      seq > @
        statementExpression_6
      [] > statementExpression_6
        this.o > @
          this
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_7
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_7
      this.super.constructor > @
        this.super

[] > class__Test
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Test" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_4
      statementExpression_8
    cage > derivedInstance
    [] > variableDeclaration_4
      derivedInstance.write > @
        initializerSimple_5
    [] > initializerSimple_5
      instanceCreation_2 > @
    [] > instanceCreation_2
      class__Derived.constructor > @
        class__Derived.new
    [] > statementExpression_8
      derivedInstance.n > @
        derivedInstance
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_9
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_9
      this.super.constructor > @
        this.super

[args...] > main
  class__Test.main > @
    *