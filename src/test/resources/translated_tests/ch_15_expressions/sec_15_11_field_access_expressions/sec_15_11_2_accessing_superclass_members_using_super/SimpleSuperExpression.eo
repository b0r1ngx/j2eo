# 2022-07-18T16:12:27.391395190
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__String
+alias stdlib.primitives.prim__int

[] > class__SimpleSuperExpression
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SimpleSuperExpression" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      statementExpression_1
      statementExpression_2
    [] > statementExpression_1
      unsupported_qualifier.test > @
        unsupported_qualifier
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        literal_1
    [] > literal_1
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_3
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_3
      this.super.constructor > @
        this.super

[] > class__T0
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__T0" > className
    1 > address
    [this] > init
      seq > @
        variableDeclaration_1
      [] > variableDeclaration_1
        this.x.write > @
          initializerSimple_1
      [] > initializerSimple_1
        literal_2 > @
      [] > literal_2
        prim__int.constructor_2 > @
          prim__int.new
          0
    prim__int.constructor_1 > x
      prim__int.new
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_4
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_4
      this.super.constructor > @
        this.super

[] > class__T1
  class__T0 > super
  super > @
  [] > new
    class__T0.new > super
    super > @
    "class__T1" > className
    1 > address
    [this] > init
      seq > @
        variableDeclaration_2
      [] > variableDeclaration_2
        this.x.write > @
          initializerSimple_3
      [] > initializerSimple_3
        literal_3 > @
      [] > literal_3
        prim__int.constructor_2 > @
          prim__int.new
          1
    prim__int.constructor_1 > x
      prim__int.new
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_5
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      this.super.constructor > @
        this.super

[] > class__T2
  class__T1 > super
  super > @
  [] > new
    class__T1.new > super
    super > @
    "class__T2" > className
    1 > address
    [this] > init
      seq > @
        variableDeclaration_3
      [] > variableDeclaration_3
        this.x.write > @
          initializerSimple_5
      [] > initializerSimple_5
        literal_4 > @
      [] > literal_4
        prim__int.constructor_2 > @
          prim__int.new
          2
    prim__int.constructor_1 > x
      prim__int.new
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_6
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_6
      this.super.constructor > @
        this.super

[] > class__T3
  class__T2 > super
  super > @
  [] > new
    class__T2.new > super
    super > @
    "class__T3" > className
    1 > address
    [this] > init
      seq > @
        variableDeclaration_4
      [] > variableDeclaration_4
        this.x.write > @
          initializerSimple_7
      [] > initializerSimple_7
        literal_5 > @
      [] > literal_5
        prim__int.constructor_2 > @
          prim__int.new
          3
    prim__int.constructor_1 > x
      prim__int.new
    # test :: null -> void
    [this] > test
      seq > @
        statementExpression_7
        statementExpression_8
        statementExpression_9
        statementExpression_10
        statementExpression_11
      [] > statementExpression_7
        class__System.out.println > @
          class__System.out
          simpleReference_1
      [] > simpleReference_1
        x > @
      [] > statementExpression_8
        class__System.out.println > @
          class__System.out
          fieldAccess_4
      [] > fieldAccess_4
        simpleReference_2.x > @
      [] > simpleReference_2
        super > @
      [] > statementExpression_9
        class__System.out.println > @
          class__System.out
          fieldAccess_6
      [] > fieldAccess_6
        parenthesized_1.x > @
      [] > parenthesized_1
        cast_1 > @
      [] > cast_1
        class__T2.from > @
          this_5
      [] > this_5
        this > @
      [] > statementExpression_10
        class__System.out.println > @
          class__System.out
          fieldAccess_8
      [] > fieldAccess_8
        parenthesized_2.x > @
      [] > parenthesized_2
        cast_2 > @
      [] > cast_2
        class__T1.from > @
          this_6
      [] > this_6
        this > @
      [] > statementExpression_11
        class__System.out.println > @
          class__System.out
          fieldAccess_10
      [] > fieldAccess_10
        parenthesized_3.x > @
      [] > parenthesized_3
        cast_3 > @
      [] > cast_3
        class__T0.from > @
          this_7
      [] > this_7
        this > @
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_12
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_12
      this.super.constructor > @
        this.super

[args...] > main
  class__SimpleSuperExpression.main > @
    *