# 2022-07-18T16:10:46.492972875
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.lang.class__String
+alias stdlib.primitives.prim__int

[] > class__CompoundClassLeftHandOperandIsEvaluatedFirst
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__CompoundClassLeftHandOperandIsEvaluatedFirst" > className
    1 > address
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      statementExpression_1
      statementExpression_2
      statementExpression_3
    cage > t
    [] > variableDeclaration_1
      t.write > @
        initializerSimple_1
    [] > initializerSimple_1
      instanceCreation_1 > @
    [] > instanceCreation_1
      class__Test.constructor > @
        class__Test.new
        literal_1
        literal_2
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > literal_2
      null > @
    [] > statementExpression_1
      simpleReference_1.write > @
        parenthesized_1
    [] > simpleReference_1
      t > @
    [] > parenthesized_1
      binary_1 > @
    [] > binary_1
      simpleReference_2.write > @
        parenthesized_2
    [] > simpleReference_2
      t > @
    [] > parenthesized_2
      binary_2 > @
    [] > binary_2
      simpleReference_3.write > @
        instanceCreation_2
    [] > simpleReference_3
      t > @
    [] > instanceCreation_2
      class__Test.constructor > @
        class__Test.new
        literal_3
        simpleReference_4
    [] > literal_3
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > simpleReference_4
      t > @
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        fieldAccess_2
    [] > fieldAccess_2
      simpleReference_5.id > @
    [] > simpleReference_5
      t > @
    [] > statementExpression_3
      class__System.out.println > @
        class__System.out
        literal_4
    [] > literal_4
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_4
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_4
      this.super.constructor > @
        this.super

[] > class__Test
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Test" > className
    1 > address
    [this] > init
      seq > @
        TRUE
    prim__int.constructor_1 > id
      prim__int.new
  # null :: int -> Test -> void
  [this id t] > constructor
    seq > @
      initialization
      statementExpression_5
      ifThenElse_1
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      fieldAccess_4.write > @
        simpleReference_6
    [] > fieldAccess_4
      this_2.id > @
    [] > this_2
      this > @
    [] > simpleReference_6
      id > @
    [] > ifThenElse_1
      binary_3.if > @
        block_1
        empty_1
    [] > binary_3
      simpleReference_7.not_eq > @
        literal_5
    [] > simpleReference_7
      t > @
    [] > literal_5
      null > @
    [] > block_1
      seq > @
        statementExpression_6
      [] > statementExpression_6
        class__System.out.println > @
          class__System.out
          fieldAccess_6
      [] > fieldAccess_6
        simpleReference_8.id > @
      [] > simpleReference_8
        t > @
    [] > empty_1
      TRUE > @

[args...] > main
  class__CompoundClassLeftHandOperandIsEvaluatedFirst.main > @
    *