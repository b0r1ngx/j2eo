# 2022-07-18T16:11:06.545544111
# j2eo team
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__SimpleFieldInit
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__SimpleFieldInit" > className
    1 > address
    [this] > init
      seq > @
        variableDeclaration_1
      [] > variableDeclaration_1
        this.a.write > @
          initializerSimple_1
      [] > initializerSimple_1
        binary_1 > @
      [] > binary_1
        literal_1.add > @
          binary_2
      [] > literal_1
        prim__int.constructor_2 > @
          prim__int.new
          2
      [] > binary_2
        literal_2.mul > @
          parenthesized_1
      [] > literal_2
        prim__int.constructor_2 > @
          prim__int.new
          2
      [] > parenthesized_1
        binary_3 > @
      [] > binary_3
        literal_3.sub > @
          parenthesized_2
      [] > literal_3
        prim__int.constructor_2 > @
          prim__int.new
          2
      [] > parenthesized_2
        binary_4 > @
      [] > binary_4
        literal_4.sub > @
          literal_5
      [] > literal_4
        prim__int.constructor_2 > @
          prim__int.new
          2
      [] > literal_5
        prim__int.constructor_2 > @
          prim__int.new
          2
    prim__int.constructor_1 > a
      prim__int.new
  # main :: String[] -> void
  [args] > main
    seq > @
      statementExpression_1
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        literal_6
    [] > literal_6
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_2
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_2
      this.super.constructor > @
        this.super

[args...] > main
  class__SimpleFieldInit.main > @
    *