# 2022-07-18T12:42:28.264424700
# j2eo team
+package divByZero
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__boolean
+alias stdlib.primitives.prim__int

[] > class__Test
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__Test" > className
    [this] > init
      seq > @
        TRUE
  # test :: boolean -> boolean -> int -> int -> int
  [x y z w] > test
    seq > @
      variableDeclaration_1
      ifThenElse_1
      return_1
    prim__int.constructor_1 > result
      prim__int.new
    [] > variableDeclaration_1
      TRUE > @
    [] > ifThenElse_1
      simpleReference_1.if > @
        block_1
        block_2
    [] > simpleReference_1
      x > @
    [] > block_1
      seq > @
        statementExpression_1
      [] > statementExpression_1
        simpleReference_2.write > @
          simpleReference_3
      [] > simpleReference_2
        result > @
      [] > simpleReference_3
        z > @
    [] > block_2
      seq > @
        ifThenElse_2
      [] > ifThenElse_2
        simpleReference_4.if > @
          block_3
          block_4
      [] > simpleReference_4
        y > @
      [] > block_3
        seq > @
          statementExpression_2
        [] > statementExpression_2
          simpleReference_5.write > @
            binary_1
        [] > simpleReference_5
          result > @
        [] > binary_1
          simpleReference_6.div > @
            simpleReference_7
        [] > simpleReference_6
          w > @
        [] > simpleReference_7
          z > @
      [] > block_4
        seq > @
          statementExpression_3
        [] > statementExpression_3
          simpleReference_8.write > @
            simpleReference_9
        [] > simpleReference_8
          result > @
        [] > simpleReference_9
          w > @
    [] > return_1
      simpleReference_10 > @
    [] > simpleReference_10
      result > @
  # main :: String[] -> void
  [args] > main
    seq > @
      statementExpression_4
    [] > statementExpression_4
      class__System.out.println > @
        class__System.out
        methodInvocation_1
    [] > methodInvocation_1
      this.test > @
        this
        literal_1
        literal_2
        literal_3
        literal_4
    [] > literal_1
      prim__boolean.constructor_2 > @
        prim__boolean.new
        FALSE
    [] > literal_2
      prim__boolean.constructor_2 > @
        prim__boolean.new
        TRUE
    [] > literal_3
      prim__int.constructor_2 > @
        prim__int.new
        0
    [] > literal_4
      prim__int.constructor_2 > @
        prim__int.new
        0
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_5
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_5
      this.super.constructor > @
        this.super

[args...] > main
  class__Test.main > @
    *