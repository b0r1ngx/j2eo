# 2022-07-13T17:59:02.000876200
# j2eo team
+package ch_14_blocks_statements_and_patterns.sec_14_4_local_variable_declarations.sec_14_4_1_local_variable_declarators_and_types
+alias stdlib.lang.class__System
+alias stdlib.lang.class__Object
+alias stdlib.primitives.prim__int
+alias stdlib.lang.class__String

[] > class__VariableDeclarations
  class__Object > super
  super > @
  [] > new
    class__Object.new > super
    super > @
    "class__VariableDeclarations" > className
    [this] > init
      seq > @
        TRUE
  # main :: String[] -> void
  [args] > main
    seq > @
      variableDeclaration_1
      statementExpression_1
      variableDeclaration_2
      statementExpression_2
      variableDeclaration_3
      statementExpression_3
      variableDeclaration_4
      statementExpression_4
      statementExpression_5
    cage > a
    [] > variableDeclaration_1
      a.write > @
        initializerSimple_1
    [] > initializerSimple_1
      literal_1 > @
    [] > literal_1
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > statementExpression_1
      class__System.out.println > @
        class__System.out
        simpleReference_1
    [] > simpleReference_1
      a > @
    cage > b
    [] > variableDeclaration_2
      b.write > @
        initializerSimple_2
    [] > initializerSimple_2
      methodInvocation_1 > @
    [] > methodInvocation_1
      java.util.List.of > @
        java.util.List
        literal_2
        literal_3
    [] > literal_2
      prim__int.constructor_2 > @
        prim__int.new
        1
    [] > literal_3
      prim__int.constructor_2 > @
        prim__int.new
        2
    [] > statementExpression_2
      class__System.out.println > @
        class__System.out
        simpleReference_2
    [] > simpleReference_2
      b > @
    cage > c
    [] > variableDeclaration_3
      c.write > @
        initializerSimple_3
    [] > initializerSimple_3
      methodInvocation_2 > @
    [] > methodInvocation_2
      unsupported_qualifier.getClass > @
        unsupported_qualifier
    [] > statementExpression_3
      class__System.out.println > @
        class__System.out
        simpleReference_3
    [] > simpleReference_3
      c > @
    cage > e
    [] > variableDeclaration_4
      e.write > @
        initializerSimple_4
    [] > initializerSimple_4
      cast_1 > @
    [] > cast_1
      class__CharSequence.from > @
        literal_5
    [] > literal_5
      class__String.constructor_2 > @
        class__String.new
        "x"
    [] > statementExpression_4
      class__System.out.println > @
        class__System.out
        simpleReference_4
    [] > simpleReference_4
      e > @
    [] > statementExpression_5
      class__System.out.println > @
        class__System.out
        literal_6
    [] > literal_6
      class__String.constructor_2 > @
        class__String.new
        "passed"
  # null :: null -> void
  [this] > constructor
    seq > @
      initialization
      statementExpression_6
      this
    [] > initialization
      this.init > @
        this
    [] > statementExpression_6
      this.super.constructor > @
        this.super

[args...] > main
  class__VariableDeclarations.main > @
    *